% SECURE DECLARATIVE BUNDLED
local NewStack S2 S3 S4 S S5 Val Val2 in
   local
      fun {StackOps S}
     	 fun {Push E} {StackOps E|S} end
     	 fun {Pop ?E}
	    case S of X|S1 then E=X {StackOps S1} end end
	 fun {IsEmpty} S==nil end
      in stack(push:Push pop:Pop isEmpty:IsEmpty) end
   in
      fun {NewStack} {StackOps nil} end
   end
      S = {NewStack}
      S2 = {S.push 4}
      S3 = {S2.push 10}
      S4 = {S3.pop Val}
   try
      skip
%	  S5 = {Stack.pop [3 14 10 9 8] Val2} % Esto no se puede porque es seguro, tira una excepcion
      catch Exc then
	 {Browse Exc}
      end
      {Browse S}
      {Browse S2}
      {Browse S3}
      {Browse Val}
      {Browse S4}
      {Browse Val2}
      {Browse S5}
end


