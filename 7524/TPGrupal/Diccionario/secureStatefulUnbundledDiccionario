% SECURE STATEFUL UNBUNDLED
local NewWrapper in
   proc {NewWrapper Wrap Unwrap}
      local Key = {NewName} in
	 fun {Wrap X}
	    fun {$ K}
	       if (K==Key) then X end
	    end
	 end
	 fun {Unwrap W}
	    {W Key}
	 end
      end
   end

   local Stack C C2 S Val Val2 Wrap Unwrap in
      local
	      {NewWrapper Wrap Unwrap}
	      fun {NewStack} {NewCell {Wrap nil}} end
	      proc {Push C E} C:= {Wrap E|{Unwrap @C}}  end
	      proc {Pop C ?E} case {Unwrap @C} of X|S1 then E=X C:={Wrap S1} end end
	      fun {IsEmpty C} {Unwrap @C}==nil end
      in
	 Stack=stack(new:NewStack push:Push pop:Pop isEmpty:IsEmpty)
      end
   S = {Stack.new}
   {Browse @S}
   {Stack.push S 4}
   {Browse @S}
   {Stack.push S 10}
   {Browse @S}
   {Stack.pop S Val}
   {Browse Val}
   {Browse @S}
try
   C2 = {NewCell [3 14 10 9 8]}
   {Browse @C2}
   {Stack.pop C2 Val2}
      catch Exc then
	 {Browse Exc}
      end
   {Browse @C2}
   {Browse Val2}
   end
end

